function [max_duration,min_duration, trials,waves,rawfile,fs,channels,means,thresholds,numChunks,chunkSize]...
    = nptReadSorterHdr(filename)
%nptReadSorterHdr	Read sorter HDR files.
%	[MAX_DURATION,MIN_DURATION,TRIALS,WAVES,RAWFILE,SAMPLING_RATE,
%	CHANNEL,MEANS,THRESHOLDS] = nptReadSorterHdr(FILENAME)
%	reads the .hdr file generated by the extraction process
%	which contains the DURATION (in seconds) used to convert 
%	multiple trials	into a single trial. TRIALS is the number
%	of trials in the session. WAVES is the number of extracted
%	waveforms contained in the associated .DAT file. RAWFILE
%	is the name of the session used to extract the spike 
%	waveforms. SAMPLING_RATE is the sampling rate (in samples
%	per second) used in recording the session. CHANNEL is the 
%	signal number in the raw data file on which the extraction 
%	process was run on. 
%	e.g. 
%		[max_duration,min_duration,trials,waves,rawfile,...
%		sampling_rate,channel] = nptReadSorterHdr('0001.hdr');
%
%	Dependencies: None.

fid = fopen(filename,'rt');

% skip the first 3 lines
for i=1:3,
    fgetl(fid);
end

% read the rawfile name and number of trials
rawfile = fscanf(fid,'%*[^=]%*c %s',1);
trials = fscanf(fid,'%*[^=]%*c %i',1);

waves = fscanf(fid,'%*[^=]%*c %i',1);
[duration,count] = fscanf(fid,'%*[^=]%*c %f,%f',2);
if count>1
    % the new format has max and min values
    max_duration = duration(1);
    min_duration = duration(2);
else
    % the old format has only max values so set min value to the same
    max_duration = duration(1);
    min_duration = duration(1);
end
% [channels,num_channels] = fscanf(fid,'%*[^=]%*c %i,%i,%i,%i',4);

chanstr = fscanf(fid,'%*[^=]%*c %s',1);
[channels,num_channels] = sscanf(chanstr,'%i,');

channels=channels';
fs = fscanf(fid,'%i',1);

% skip the next 58 lines
for i=1:58
    fgetl(fid);
end

if num_channels==4
    [a,count] = fscanf(fid,'%*[^=]%*c %f %*[^=]%*c %f %f %f %f %*[^=]%*c %f %f %f %f',[9,trials]);
    means = a(2:5,:);
    thresholds = a(6:9,:);
else
    [a,count] = fscanf(fid,'%*[^=]%*c %f',[3,trials]);
    if count>0
        means = a(2,:);
        thresholds = a(3,:);
    else
        % set to empty array if header file does not contain any mean and threshold info
        % to retain backward compatability with old data
        means = [];
        thresholds = [];
    end
end

numChunks = fscanf(fid,'%*[^=]%*c %i',1);
chunkSize = fscanf(fid,'%*[^=]%*c %i',1);
if isempty(numChunks)
    numChunks = 0;
    chunkSize = 0;
end

fclose(fid);
